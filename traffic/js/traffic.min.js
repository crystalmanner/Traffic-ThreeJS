'use strict';var ctor=function(){},breaker={},ArrayProto=Array.prototype,ObjProto=Object.prototype,FuncProto=Function.prototype,push=ArrayProto.push,slice=ArrayProto.slice,concat=ArrayProto.concat,toString=ObjProto.toString,hasOwnProperty=ObjProto.hasOwnProperty,nativeForEach=ArrayProto.forEach,nativeMap=ArrayProto.map,nativeReduce=ArrayProto.reduce,nativeReduceRight=ArrayProto.reduceRight,nativeFilter=ArrayProto.filter,nativeEvery=ArrayProto.every,nativeSome=ArrayProto.some,nativeIndexOf=ArrayProto.indexOf,
nativeLastIndexOf=ArrayProto.lastIndexOf,nativeIsArray=Array.isArray,nativeKeys=Object.keys,nativeBind=FuncProto.bind,TRAFFIC={TYPE_OF_CARS:[{w:1.8,l:4.8,h:1.4,m:"car001",name:"fordM"},{w:1.8,l:4.5,h:1.8,m:"car002",name:"vaz"},{w:2.2,l:5,h:1.5,m:"car003",name:"coupe"},{w:2.2,l:5.2,h:1.9,m:"car004",name:"c4"},{w:2.2,l:5.2,h:1.8,m:"car005",name:"ben"},{w:2.1,l:5.4,h:1.7,m:"car006",name:"taxi"},{w:2.2,l:5.4,h:1.9,m:"car007",name:"207"},{w:2.3,l:5.9,h:1.7,m:"car008",name:"police"},{w:2.7,l:6.2,h:2.6,
m:"car009",name:"van1"},{w:2.2,l:6.6,h:2.8,m:"car010",name:"van2"},{w:2.8,l:7,h:3.2,m:"car011",name:"van3"},{w:2.8,l:8.9,h:3.9,m:"car012",name:"truck1"},{w:3,l:10.6,h:3.4,m:"car013",name:"truck1"},{w:3,l:12.7,h:3.4,m:"car014",name:"bus"}],settings:{lightsFlipInterval:20,gridSize:32,defaultTimeFactor:5}};TRAFFIC.abs=Math.abs;TRAFFIC.sqrt=Math.sqrt;TRAFFIC.atan2=Math.atan2;TRAFFIC.random=Math.random;TRAFFIC.max=Math.max;TRAFFIC.min=Math.min;TRAFFIC.PI=Math.PI;
TRAFFIC.binding=function(a,b){return function(){return a.apply(b,arguments)}};TRAFFIC.bind=function(a,b){var c,d;if(nativeBind&&a.bind===nativeBind)return nativeBind.apply(a,slice.call(arguments,1));c=slice.call(arguments,2);return d=function(){if(!(this instanceof d))return a.apply(b,c.concat(slice.call(arguments)));ctor.prototype=a.prototype;var e=new ctor;ctor.prototype=null;var f=a.apply(e,c.concat(slice.call(arguments)));return Object(f)===f?f:e}};
TRAFFIC.indexOf=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1};TRAFFIC.rand=function(a,b){null==b&&(b=a,a=0);return a+Math.floor(Math.random()*(b-a+1))};TRAFFIC.sample=function(a,b,c){return null==b||c?(a.length!==+a.length&&(a=TRAFFIC.values(a)),a[TRAFFIC.rand(a.length-1)]):TRAFFIC.shuffle(a).slice(0,Math.max(0,b))};TRAFFIC.shuffle=function(a){var b,c=0,d=[];TRAFFIC.each(a,function(a){b=TRAFFIC.rand(c++);d[c-1]=d[b];d[b]=a});return d};
TRAFFIC.idCounter=0;TRAFFIC.uniqueId=function(a){var b=++TRAFFIC.idCounter+"";return a?a+b:b};TRAFFIC.extend=function(a){TRAFFIC.each(slice.call(arguments,1),function(b){if(b)for(var c in b)a[c]=b[c]});return a};TRAFFIC.reduce=function(a,b,c,d){var e=2<arguments.length;null==a&&(a=[]);if(nativeReduce&&a.reduce===nativeReduce)return d&&(b=TRAFFIC.bind(b,d)),e?a.reduce(b,c):a.reduce(b);TRAFFIC.each(a,function(a,g,h){e?c=b.call(d,c,a,g,h):(c=a,e=!0)});return c};
TRAFFIC.each=function(a,b,c){if(null==a)return a;if(nativeForEach&&a.forEach===nativeForEach)a.forEach(b,c);else if(a.length===+a.length)for(var d=0,e=a.length;d<e;d++){if(b.call(c,a[d],d,a)===breaker)return}else for(var f=TRAFFIC.keys(a),d=0,e=f.length;d<e;d++)if(b.call(c,a[f[d]],f[d],a)===breaker)return;return a};TRAFFIC.keys=function(a){if(!TRAFFIC.isObject(a))return[];var b=[],c;for(c in a)TRAFFIC.has(a,c)&&b.push(c);return b};TRAFFIC.isObject=function(a){return a===Object(a)};
TRAFFIC.has=function(a,b){return hasOwnProperty.call(a,b)};TRAFFIC.values=function(a){for(var b=TRAFFIC.keys(a),c=b.length,d=Array(c),e=0;e<c;e++)d[e]=a[b[e]];return d};TRAFFIC.map=function(a,b,c){var d=[];if(null==a)return d;if(nativeMap&&a.map===nativeMap)return a.map(b,c);TRAFFIC.each(a,function(a,f,g){d.push(b.call(c,a,f,g))});return d};TRAFFIC.Point=function(a,b){this.x=null!=a?a:0;this.y=null!=b?b:0;Object.defineProperty(this,"length",{get:function(){return TRAFFIC.sqrt(this.x*this.x+this.y*this.y)}});Object.defineProperty(this,"direction",{get:function(){return TRAFFIC.atan2(this.y,this.x)}});Object.defineProperty(this,"normalized",{get:function(){return new TRAFFIC.Point(this.x/this.length,this.y/this.length)}})};
TRAFFIC.Point.prototype={constructor:TRAFFIC.Point,add:function(a){return new TRAFFIC.Point(this.x+a.x,this.y+a.y)},subtract:function(a){return new TRAFFIC.Point(this.x-a.x,this.y-a.y)},mult:function(a){return new TRAFFIC.Point(this.x*a,this.y*a)},divide:function(a){return new TRAFFIC.Point(this.x/a,this.y/a)}};TRAFFIC.Rect=function(a,b,c,d){this.x=a||0;this.y=b||0;this._width=null!=c?c:0;this._height=null!=d?d:0};
TRAFFIC.Rect.prototype={constructor:TRAFFIC.Rect,copy:function(a){return new TRAFFIC.Rect(a.x,a.y,a._width,a._height)},toJSON:function(){return TRAFFIC.extend({},this)},area:function(){return this.width()*this.height()},left:function(a){null!=a&&(this.x=a);return this.x},right:function(a){null!=a&&(this.x=a-this.width());return this.x+this.width()},width:function(a){null!=a&&(this._width=a);return this._width},top:function(a){null!=a&&(this.y=a);return this.y},bottom:function(a){null!=a&&(this.y=
a-this.height());return this.y+this.height()},height:function(a){null!=a&&(this._height=a);return this._height},center:function(a){null!=a&&(this.x=a.x-this.width()/2,this.y=a.y-this.height()/2);return new TRAFFIC.Point(this.x+this.width()/2,this.y+this.height()/2)},containsPoint:function(a){var b,c;return this.left()<=(b=a.x)&&b<=this.right()&&this.top()<=(c=a.y)&&c<=this.bottom()},containsRect:function(a){return this.left()<=a.left()&&a.right()<=this.right()&&this.top()<=a.top()&&a.bottom()<=this.bottom()},
getVertices:function(){return[new TRAFFIC.Point(this.left(),this.top()),new TRAFFIC.Point(this.right(),this.top()),new TRAFFIC.Point(this.right(),this.bottom()),new TRAFFIC.Point(this.left(),this.bottom())]},getSide:function(a){var b;b=this.getVertices();return new TRAFFIC.Segment(b[a],b[(a+1)%4])},getSectorId:function(a){a=a.subtract(this.center());if(0>=a.y&&TRAFFIC.abs(a.x)<=TRAFFIC.abs(a.y))return 0;if(0<=a.x&&TRAFFIC.abs(a.x)>=TRAFFIC.abs(a.y))return 1;if(0<=a.y&&TRAFFIC.abs(a.x)<=TRAFFIC.abs(a.y))return 2;
if(0>=a.x&&TRAFFIC.abs(a.x)>=TRAFFIC.abs(a.y))return 3;throw Error("algorithm error");},getSector:function(a){return this.getSide(this.getSectorId(a))}};TRAFFIC.Curve=function(a,b,c,d){this.A=a;this.B=b;this.O=c;this.Q=d;this.AB=new TRAFFIC.Segment(this.A,this.B);this.AO=new TRAFFIC.Segment(this.A,this.O);this.OQ=new TRAFFIC.Segment(this.O,this.Q);this.QB=new TRAFFIC.Segment(this.Q,this.B);this._length=null;Object.defineProperty(this,"length",{get:function(){var a,b,c;if(null==this._length)for(b=null,a=c=this._length=0;10>=c;a=++c)a=this.getPoint(a/10),b&&(this._length+=a.subtract(b).length),b=a;return this._length}})};
TRAFFIC.Curve.prototype={constructor:TRAFFIC.Curve,getPoint:function(a){var b,c,d;b=this.AO.getPoint(a);c=this.OQ.getPoint(a);d=this.QB.getPoint(a);b=(new TRAFFIC.Segment(b,c)).getPoint(a);c=(new TRAFFIC.Segment(c,d)).getPoint(a);return(new TRAFFIC.Segment(b,c)).getPoint(a)},getDirection:function(a){var b,c,d;b=this.AO.getPoint(a);c=this.OQ.getPoint(a);d=this.QB.getPoint(a);b=(new TRAFFIC.Segment(b,c)).getPoint(a);a=(new TRAFFIC.Segment(c,d)).getPoint(a);return(new TRAFFIC.Segment(b,a)).direction}};TRAFFIC.Segment=function(a,b){this.source=a;this.target=b;Object.defineProperty(this,"vector",{get:function(){return this.target.subtract(this.source)}});Object.defineProperty(this,"length",{get:function(){return this.vector.length}});Object.defineProperty(this,"direction",{get:function(){return this.vector.direction}});Object.defineProperty(this,"center",{get:function(){return this.getPoint(0.5)}})};
TRAFFIC.Segment.prototype={constructor:TRAFFIC.Segment,split:function(a,b){var c,d,e,f,g,h,k,l;d=b?function(){h=[];for(var b=g=a-1;0>=g?0>=b:0<=b;0>=g?b++:b--)h.push(b);return h}.apply(this):function(){k=[];for(var b=0,c=a-1;0<=c?b<=c:b>=c;0<=c?b++:b--)k.push(b);return k}.apply(this);l=[];e=0;for(f=d.length;e<f;e++)c=d[e],l.push(this.subsegment(c/a,(c+1)/a));return l},getPoint:function(a){return this.source.add(this.vector.mult(a))},subsegment:function(a,b){var c,d;c=this.vector;d=this.source.add(c.mult(a));
c=this.source.add(c.mult(b));return new TRAFFIC.Segment(d,c)}};TRAFFIC.World=function(){this.toRemove=[];this.onTick=TRAFFIC.bind(this.onTick,this);this.set({});Object.defineProperty(this,"instantSpeed",{get:function(){var a;a=TRAFFIC.map(this.cars.all(),function(a){return a.speed});return 0===a.length?0:TRAFFIC.reduce(a,function(a,c){return a+c})/a.length}})};
TRAFFIC.World.prototype={constructor:TRAFFIC.World,set:function(a){null==a&&(a={});this.intersections=new TRAFFIC.Pool(TRAFFIC.Intersection,a.intersections);this.roads=new TRAFFIC.Pool(TRAFFIC.Road,a.roads);this.cars=new TRAFFIC.Pool(TRAFFIC.Car,a.cars);return this.carsNumber=0},save:function(){var a;a=TRAFFIC.extend({},this);delete a.cars;return window.localStorage.world=JSON.stringify(a)},load:function(){var a,b,c,d;a=(a=window.localStorage.world)&&JSON.parse(a);if(null!=a){this.clear();this.carsNumber=
a.carsNumber||0;d=a.intersections;for(b in d)c=d[b],this.addIntersection(TRAFFIC.Intersection.copy(c));c=a.roads;d=[];for(b in c)a=c[b],a=(new TRAFFIC.Road).copy(a),a.source=this.getIntersection(a.source),a.target=this.getIntersection(a.target),d.push(this.addRoad(a));return d}},generateMap:function(a,b,c,d){var e=-a,f=-b;c=c||5;d=d||0.8;var g,h,k,l,m;this.clear();k=d*(a-e+1)*(b-f+1)|0;d={};g=TRAFFIC.settings.gridSize;l=c*g;for(this.carsNumber=100;0<k;)c=TRAFFIC.rand(e,a),m=TRAFFIC.rand(f,b),null==
d[[c,m]]&&(h=new TRAFFIC.Rect(l*c,l*m,g,g),h=new TRAFFIC.Intersection(h),this.addIntersection(d[[c,m]]=h),k-=1);for(c=k=e;e<=a?k<=a:k>=a;c=e<=a?++k:--k)for(g=null,m=l=f;f<=b?l<=b:l>=b;m=f<=b?++l:--l)h=d[[c,m]],null!=h&&(0.9>TRAFFIC.random()&&(null!=g&&this.addRoad(new TRAFFIC.Road(h,g)),null!=g&&this.addRoad(new TRAFFIC.Road(g,h))),g=h);for(m=k=f;f<=b?k<=b:k>=b;m=f<=b?++k:--k)for(g=null,c=l=e;e<=a?l<=a:l>=a;c=e<=a?++l:--l)h=d[[c,m]],null!=h&&(0.9>TRAFFIC.random()&&(null!=g&&this.addRoad(new TRAFFIC.Road(h,
g)),null!=g&&this.addRoad(new TRAFFIC.Road(g,h))),g=h);return null},clear:function(){return this.set({})},onTick:function(a){var b,c,d,e;if(1<a)throw Error("delta > 1");this.refreshCars();d=this.intersections.all();for(c in d)b=d[c],b.controlSignals.onTick(a);d=this.cars.all();e=[];for(c in d)b=d[c],b.move(a),b.alive?e.push(void 0):e.push(this.removeCar(b));return e},refreshCars:function(){this.cars.length<this.carsNumber&&this.addRandomCar();if(this.cars.length>this.carsNumber)return this.removeRandomCar()},
addRoad:function(a){this.roads.put(a);a.source.roads.push(a);a.target.inRoads.push(a);return a.update()},getRoad:function(a){return this.roads.get(a)},addCar:function(a){return this.cars.put(a)},getCar:function(a){return this.cars.get(a)},removeCar:function(a){this.toRemove.push(a.id);return this.cars.pop(a)},clearTmpRemove:function(){this.toRemove=[]},addIntersection:function(a){return this.intersections.put(a)},getIntersection:function(a){return this.intersections.get(a)},addRandomCar:function(){var a;
a=TRAFFIC.sample(this.roads.all());if(null!=a&&(a=TRAFFIC.sample(a.lanes),null!=a))return this.addCar(new TRAFFIC.Car(a))},removeRandomCar:function(){var a;a=TRAFFIC.sample(this.cars.all());if(null!=a)return this.removeCar(a)}};TRAFFIC.Car=function(a,b){this.type=TRAFFIC.rand(TRAFFIC.TYPE_OF_CARS.length-1);this.id=TRAFFIC.uniqueId("car");this.color=(300+240*TRAFFIC.random()|0)%360;this._speed=0;this.width=2*TRAFFIC.TYPE_OF_CARS[this.type].w;this.length=2*TRAFFIC.TYPE_OF_CARS[this.type].l;this.maxSpeed=30;this.s0=2;this.timeHeadway=1.5;this.maxAcceleration=1;this.maxDeceleration=3;this.trajectory=new TRAFFIC.Trajectory(this,a,b);this.alive=!0;this.preferedLane=null;Object.defineProperty(this,"coords",{get:function(){return this.trajectory.coords}});
Object.defineProperty(this,"speed",{get:function(){return this._speed},set:function(a){0>a&&(a=0);a>this.maxSpeed&&(a=this.maxSpeed);return this._speed=a}});Object.defineProperty(this,"direction",{get:function(){return this.trajectory.direction}})};
TRAFFIC.Car.prototype={constructor:TRAFFIC.Car,release:function(){return this.trajectory.release()},getAcceleration:function(){var a,b,c,d,e,f,g;g=this.trajectory.nextCarDistance;c=TRAFFIC.max(g.distance,0);a=this.maxAcceleration;b=this.maxDeceleration;d=this.speed-(null!=(f=g.car)?f.speed:NaN)||0;f=Math.pow(this.speed/this.maxSpeed,4);e=this.s0;g=this.speed*this.timeHeadway;a=this.speed*d/(2*TRAFFIC.sqrt(a*b));c=Math.pow((e+g+a)/c,2);b=1+g+Math.pow(this.speed,2)/(2*b);b=Math.pow(b/this.trajectory.distanceToStopLine,
2);return this.maxAcceleration*(1-f-c-b)},move:function(a){var b,c,d,e;b=this.getAcceleration();this.speed+=b*a;!this.trajectory.isChangingLanes&&this.nextLane&&(c=this.trajectory.current.lane,e=c.getTurnDirection(this.nextLane),d=function(){switch(e){case 0:return c.leftmostAdjacent;case 2:return c.rightmostAdjacent;default:return c}}(),d!==c&&this.trajectory.changeLane(d));a=this.speed*a+0.5*b*Math.pow(a,2);this.trajectory.nextCarDistance.distance<a&&console.log("bad IDM");return this.trajectory.timeToMakeTurn(a)&&
null==this.nextLane?this.alive=!1:this.trajectory.moveForward(a)},pickNextRoad:function(){var a,b;b=this.trajectory.nextIntersection;a=this.trajectory.current.lane;b=b.roads.filter(function(b){return b.target!==a.road.source});return 0===b.length?null:TRAFFIC.sample(b)},pickNextLane:function(){var a,b,c;if(this.nextLane)throw Error("next lane is already chosen");this.nextLane=null;b=this.pickNextRoad();if(!b)return null;c=this.trajectory.current.lane.road.getTurnDirection(b);a=function(){switch(c){case 0:return b.lanesNumber-
1;case 1:return TRAFFIC.rand(0,b.lanesNumber-1);case 2:return 0}}();this.nextLane=b.lanes[a];if(!this.nextLane)throw Error("can not pick next lane");return this.nextLane},popNextLane:function(){var a;a=this.nextLane;this.preferedLane=this.nextLane=null;return a}};TRAFFIC.Lane=function(a,b,c){this.sourceSegment=a;this.targetSegment=b;this.road=c;this.rightmostAdjacent=this.leftmostAdjacent=this.rightAdjacent=this.leftAdjacent=null;this.carsPositions={};this.update();Object.defineProperty(this,"sourceSideId",{get:function(){return this.road.sourceSideId}});Object.defineProperty(this,"targetSideId",{get:function(){return this.road.targetSideId}});Object.defineProperty(this,"isRightmost",{get:function(){return this===this.rightmostAdjacent}});Object.defineProperty(this,
"isLeftmost",{get:function(){return this===this.leftmostAdjacent}});Object.defineProperty(this,"leftBorder",{get:function(){return new TRAFFIC.Segment(this.sourceSegment.source,this.targetSegment.target)}});Object.defineProperty(this,"rightBorder",{get:function(){return new TRAFFIC.Segment(this.sourceSegment.target,this.targetSegment.source)}})};
TRAFFIC.Lane.prototype={constructor:TRAFFIC.Lane,toJSON:function(a){a=TRAFFIC.extend({},this);delete a.carsPositions;return a},update:function(){this.middleLine=new TRAFFIC.Segment(this.sourceSegment.center,this.targetSegment.center);this.length=this.middleLine.length;return this.direction=this.middleLine.direction},getTurnDirection:function(a){return this.road.getTurnDirection(a.road)},getDirection:function(){return this.direction},getPoint:function(a){return this.middleLine.getPoint(a)},addCarPosition:function(a){if(a.id in
this.carsPositions)throw Error("car is already here");return this.carsPositions[a.id]=a},removeCar:function(a){if(!(a.id in this.carsPositions))throw Error("removing unknown car");return delete this.carsPositions[a.id]},getNext:function(a){var b,c,d,e,f,g;if(a.lane!==this)throw Error("car is on other lane");e=null;b=Infinity;g=this.carsPositions;for(d in g)f=g[d],c=f.position-a.position,!f.free&&0<c&&c<b&&(b=c,e=f);return e}};TRAFFIC.Intersection=function(a){this.rect=a;this.id=TRAFFIC.uniqueId("intersection");this.roads=[];this.inRoads=[];this.controlSignals=new TRAFFIC.ControlSignals(this)};
TRAFFIC.Intersection.prototype={constructor:TRAFFIC.Intersection,copy:function(a){var b;a.rect=TRAFFIC.Rect.copy(a.rect);b=Object.create(TRAFFIC.Intersection.prototype);TRAFFIC.extend(b,a);b.roads=[];b.inRoads=[];b.controlSignals=new TRAFFIC.ControlSignals(b);return b},toJSON:function(){return{id:this.id,rect:this.rect}},update:function(){var a,b,c,d,e;d=this.roads;b=0;for(c=d.length;b<c;b++)a=d[b],a.update();d=this.inRoads;e=[];b=0;for(c=d.length;b<c;b++)a=d[b],e.push(a.update());return e}};TRAFFIC.STATE=[{RED:0,GREEN:1}];
TRAFFIC.ControlSignals=function(a){this.intersection=a;this.onTick=TRAFFIC.binding(this.onTick,this);this.time=0;this.flipMultiplier=1+(0.4*TRAFFIC.random()-0.2);this.stateNum=0;Object.defineProperty(this,"flipInterval",{get:function(){return this.flipMultiplier*TRAFFIC.settings.lightsFlipInterval}});Object.defineProperty(this,"state",{get:function(){var a,c,d,e,f;a=this.states[this.stateNum%this.states.length];2>=this.intersection.roads.length&&(a=["LFR","LFR","LFR","LFR"]);f=[];d=0;for(e=a.length;d<
e;d++)c=a[d],f.push(this._decode(c));return f}})};TRAFFIC.ControlSignals.prototype={constructor:TRAFFIC.ControlSignals,_decode:function(a){var b;b=[0,0,0];0<=TRAFFIC.indexOf.call(a,"L")&&(b[0]=1);0<=TRAFFIC.indexOf.call(a,"F")&&(b[1]=1);0<=TRAFFIC.indexOf.call(a,"R")&&(b[2]=1);return b},flip:function(){return this.stateNum+=1},onTick:function(a){this.time+=a;if(this.time>this.flipInterval)return this.flip(),this.time-=this.flipInterval}};
TRAFFIC.ControlSignals.prototype.states=[["L","","L",""],["FR","","FR",""],["","L","","L"],["","FR","","FR"]];TRAFFIC.LanePosition=function(a,b,c){this.car=a;this.position=c;this.id=TRAFFIC.uniqueId("laneposition");this.free=!0;this._lane=b;Object.defineProperty(this,"lane",{get:function(){return this._lane},set:function(a){this.release();return this._lane=a}});Object.defineProperty(this,"relativePosition",{get:function(){return this.position/this.lane.length}});Object.defineProperty(this,"nextCarDistance",{get:function(){var a,b,c;return(b=this.getNext())?(c=b.position-b.car.length/2,a=this.position+this.car.length/
2,{car:b.car,distance:c-a}):{car:null,distance:Infinity}}})};TRAFFIC.LanePosition.prototype={constructor:TRAFFIC.LanePosition,acquire:function(){var a;if(null!=(null!=(a=this.lane)?a.addCarPosition:void 0))return this.free=!1,this.lane.addCarPosition(this)},release:function(){var a;if(!this.free&&null!=(a=this.lane)&&a.removeCar)return this.free=!0,this.lane.removeCar(this)},getNext:function(){if(this.lane&&!this.free)return this.lane.getNext(this)}};TRAFFIC.Pool=function(a,b){var c,d,e;this.factory=a;this.objects={};if(null!=b&&null!=b.objects)for(c in e=b.objects,e)d=e[c],this.objects[c]=this.factory.copy(d);Object.defineProperty(this,"length",{get:function(){return Object.keys(this.objects).length}})};
TRAFFIC.Pool.prototype={constructor:TRAFFIC.Pool,toJSON:function(){return this.objects},get:function(a){return this.objects[a]},put:function(a){return this.objects[a.id]=a},pop:function(a){var b;a=null!=(b=a.id)?b:a;b=this.objects[a];"function"===typeof b.release&&b.release();delete this.objects[a];return b},all:function(){return this.objects},clear:function(){return this.objects={}}};TRAFFIC.Road=function(a,b){this.source=a;this.target=b;this.id=TRAFFIC.uniqueId("road");this.lanes=[];this.lanesNumber=null;this.update();Object.defineProperty(this,"length",{get:function(){return this.targetSide.target.subtract(this.sourceSide.source).length}});Object.defineProperty(this,"leftmostLane",{get:function(){return this.lanes[this.lanesNumber-1]}});Object.defineProperty(this,"rightmostLane",{get:function(){return this.lanes[0]}})};
TRAFFIC.Road.prototype={constructor:TRAFFIC.Road,copy:function(a){var b;b=Object.create(TRAFFIC.Road.prototype);TRAFFIC.extend.extend(b,a);null==b.lanes&&(b.lanes=[]);return b},toJSON:function(){return{id:this.id,source:this.source.id,target:this.target.id}},getTurnDirection:function(a){if(this.target!==a.source)throw Error("invalid roads");return(a.sourceSideId-this.targetSideId-1+8)%4},update:function(){var a,b,c,d,e,f;if(!this.source||!this.target)throw Error("incomplete road");this.sourceSideId=
this.source.rect.getSectorId(this.target.rect.center());this.sourceSide=this.source.rect.getSide(this.sourceSideId).subsegment(0.5,1);this.targetSideId=this.target.rect.getSectorId(this.source.rect.center());this.targetSide=this.target.rect.getSide(this.targetSideId).subsegment(0,0.5);this.lanesNumber=TRAFFIC.min(this.sourceSide.length,this.targetSide.length)|0;this.lanesNumber=TRAFFIC.max(2,this.lanesNumber/TRAFFIC.settings.gridSize|0);b=this.sourceSide.split(this.lanesNumber,!0);c=this.targetSide.split(this.lanesNumber);
if(null==this.lanes||this.lanes.length<this.lanesNumber)for(null==this.lanes&&(this.lanes=[]),a=e=0,f=this.lanesNumber-1;0<=f?e<=f:e>=f;a=0<=f?++e:--e)null==(d=this.lanes)[a]&&(d[a]=new TRAFFIC.Lane(b[a],c[a],this));f=[];a=d=0;for(e=this.lanesNumber-1;0<=e?d<=e:d>=e;a=0<=e?++d:--d)this.lanes[a].sourceSegment=b[a],this.lanes[a].targetSegment=c[a],this.lanes[a].leftAdjacent=this.lanes[a+1],this.lanes[a].rightAdjacent=this.lanes[a-1],this.lanes[a].leftmostAdjacent=this.lanes[this.lanesNumber-1],this.lanes[a].rightmostAdjacent=
this.lanes[0],f.push(this.lanes[a].update());return f}};TRAFFIC.Trajectory=function(a,b,c){this.car=a;null==c&&(c=0);this.current=new TRAFFIC.LanePosition(this.car,b,c);this.current.acquire();this.next=new TRAFFIC.LanePosition(this.car);this.temp=new TRAFFIC.LanePosition(this.car);this.isChangingLanes=!1;Object.defineProperty(this,"lane",{get:function(){return this.temp.lane||this.current.lane}});Object.defineProperty(this,"absolutePosition",{get:function(){return null!=this.temp.lane?this.temp.position:this.current.position}});Object.defineProperty(this,
"relativePosition",{get:function(){return this.absolutePosition/this.lane.length}});Object.defineProperty(this,"direction",{get:function(){return this.lane.getDirection(this.relativePosition)}});Object.defineProperty(this,"coords",{get:function(){return this.lane.getPoint(this.relativePosition)}});Object.defineProperty(this,"nextCarDistance",{get:function(){var a,b;a=this.current.nextCarDistance;b=this.next.nextCarDistance;return a.distance<b.distance?a:b}});Object.defineProperty(this,"distanceToStopLine",
{get:function(){return this.canEnterIntersection()?Infinity:this.getDistanceToIntersection()}});Object.defineProperty(this,"nextIntersection",{get:function(){return this.current.lane.road.target}});Object.defineProperty(this,"previousIntersection",{get:function(){return this.current.lane.road.source}})};
TRAFFIC.Trajectory.prototype={constructor:TRAFFIC.Trajectory,isValidTurn:function(){var a,b;a=this.car.nextLane;b=this.current.lane;if(!a)throw Error("no road to enter");a=b.getTurnDirection(a);if(3===a)throw Error("no U-turns are allowed");if(0===a&&!b.isLeftmost)throw Error("no left turns from this lane");if(2===a&&!b.isRightmost)throw Error("no right turns from this lane");return!0},canEnterIntersection:function(){var a,b,c;b=this.car.nextLane;c=this.current.lane;if(!b)return!0;a=this.nextIntersection;
b=c.getTurnDirection(b);return a.controlSignals.state[c.road.targetSideId][b]},getDistanceToIntersection:function(){var a;a=this.current.lane.length-this.car.length/2-this.current.position;return this.isChangingLanes?Infinity:TRAFFIC.max(a,0)},timeToMakeTurn:function(a){null==a&&(a=0);return this.getDistanceToIntersection()<=a},moveForward:function(a){var b,c;a=TRAFFIC.max(a,0);this.current.position+=a;this.next.position+=a;this.temp.position+=a;this.timeToMakeTurn()&&this.canEnterIntersection()&&
this.isValidTurn()&&this._startChangingLanes(this.car.popNextLane(),0);a=this.temp.position/(null!=(b=this.temp.lane)?b.length:NaN);b=2*this.car.length;this.isChangingLanes&&this.temp.position>b&&!this.current.free&&this.current.release();this.isChangingLanes&&this.next.free&&this.temp.position+b>(null!=(c=this.temp.lane)?c.length:void 0)&&this.next.acquire();this.isChangingLanes&&1<=a&&this._finishChangingLanes();if(this.current.lane&&!this.isChangingLanes&&!this.car.nextLane)return this.car.pickNextLane()},
changeLane:function(a){var b;if(this.isChangingLanes)throw Error("already changing lane");if(null==a)throw Error("no next lane");if(a===this.lane)throw Error("next lane == current lane");if(this.lane.road!==a.road)throw Error("not neighbouring lanes");b=this.current.position+3*this.car.length;if(!(b<this.lane.length))throw Error("too late to change lane");return this._startChangingLanes(a,b)},_getIntersectionLaneChangeCurve:function(){},_getAdjacentLaneChangeCurve:function(){var a,b,c,d;c=this.current.lane.getPoint(this.current.relativePosition);
d=this.next.lane.getPoint(this.next.relativePosition);b=d.subtract(c).length;a=this.current.lane.middleLine.vector.normalized.mult(0.3*b);a=c.add(a);b=this.next.lane.middleLine.vector.normalized.mult(0.3*b);b=d.subtract(b);return new TRAFFIC.Curve(c,d,a,b)},_getCurve:function(){return this._getAdjacentLaneChangeCurve()},_startChangingLanes:function(a,b){var c;if(this.isChangingLanes)throw Error("already changing lane");if(null==a)throw Error("no next lane");this.isChangingLanes=!0;this.next.lane=
a;this.next.position=b;c=this._getCurve();this.temp.lane=c;this.temp.position=0;return this.next.position-=this.temp.lane.length},_finishChangingLanes:function(){if(!this.isChangingLanes)throw Error("no lane changing is going on");this.isChangingLanes=!1;this.current.lane=this.next.lane;this.current.position=this.next.position||0;this.current.acquire();this.next.lane=null;this.next.position=NaN;this.temp.lane=null;this.temp.position=NaN;return this.current.lane},release:function(){var a,b,c;null!=
(a=this.current)&&a.release();null!=(b=this.next)&&b.release();return null!=(c=this.temp)?c.release():void 0}};
